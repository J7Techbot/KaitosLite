<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--BASE CONTROL - FontFamily-->
    <Style TargetType="{x:Type Control}" x:Key="ControlStyle">
        <Setter Property="FontFamily" Value="Constantia"/>
    </Style>

    <!--WINDOW-->
    <Style TargetType="{x:Type Window}" x:Key="WindowStyle">
        <Setter Property="Background" Value="Goldenrod" />
    </Style>

    <!--WINDOW POPUP-->
    <Style TargetType="{x:Type Window}" x:Key="PopUpWindowStyle">
        <Setter Property="Background" Value="AntiqueWhite" />
    </Style>
   
    <!--DATAGRID-->
    <Style TargetType="{x:Type DataGrid}" x:Key="DatagridStyle" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="Background" Value="wheat" />
        <Setter Property="BorderThickness" Value="5" />
        <Setter Property="BorderBrush" Value="BurlyWood" />
    </Style>

    <!--GRIDSPLITTER-->
    <Style TargetType="{x:Type GridSplitter}" x:Key="GridSplitterStyle" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="Background" Value="BurlyWood" />
        <Setter Property="Width" Value="5" />
    </Style>

    <!--DATAGRIDROW-->
    <Style TargetType="{x:Type DataGridRow}" x:Key="DataGridRowStyle" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="Background" Value="AntiqueWhite" />
    </Style>

    <!--DATAGRID COLUMN HEADER-->
    <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="DataGridColHeaderStyle" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="Background" Value="Peachpuff" />
    </Style>

    <!--DATAGRID ROW HEADER-->
    <Style TargetType="{x:Type DataGridRowHeader}" x:Key="DataGridRowHeaderStyle" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="Background" Value="Peachpuff" />
    </Style>

    <!--BUTTON-->
    <Style TargetType="{x:Type Button}" x:Key="ButtonStyle" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="Background" Value="AntiqueWhite" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="35" />
        <Setter Property="FontSize" Value="17" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter"  Content="{TemplateBinding Content}"  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E59400" />
                            <Setter Property="Foreground" Value="White" />

                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="OrangeRed" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--BUTTON OUT-->
    <Style TargetType="{x:Type Button}" x:Key="ButtonOutStyle" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="Background" Value="AntiqueWhite" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="17" />
        <Setter Property="MaxWidth" Value="20" />
        <Setter Property="MaxHeight" Value="20" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}">
                        <Grid>
                            <Image Width="20" Source="/Resource/Images/window_out.png" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E59400" />
                            <Setter Property="Foreground" Value="White" />

                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="OrangeRed" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--BUTTON IN-->
    <Style TargetType="{x:Type Button}" x:Key="ButtonInStyle" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="Background" Value="AntiqueWhite" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="17" />
        <Setter Property="MaxWidth" Value="20" />
        <Setter Property="MaxHeight" Value="20" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}">
                        <Grid>
                            <Image Width="20" Source="/Resource/Images/window_in.png" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E59400" />
                            <Setter Property="Foreground" Value="White" />

                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="OrangeRed" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TABCONTROL-->
    <Style TargetType="{x:Type TabControl}" x:Key="TabControlStyle">
        <Setter Property="Background" Value="AntiqueWhite" />
    </Style>
    
    <!--TABITEM-->
    <Style TargetType="{x:Type TabItem}" x:Key="SpacedTab" BasedOn="{StaticResource ControlStyle}">
        <Setter
        Property="Template">
            <Setter.Value>
                <ControlTemplate
                TargetType="{x:Type TabItem}">
                    <Border
                    x:Name="Spacer"
                    Width="100"
                    Height="Auto"
                    Padding="0 5 0 0"
                    Margin="0 0 0 0"
                    BorderBrush="Transparent"
                    BorderThickness="0">

                        <Border
                        x:Name="Border"
                        MinWidth="70"
                        MinHeight="70"
                        Height="auto"
                        Background="AntiqueWhite"
                        BorderBrush="DarkGoldenrod"                            
                        BorderThickness="0,0,0,4"
                        CornerRadius="6,0,0,6"
                        Cursor="Hand">
                            <ContentPresenter
                            x:Name="ContentSite"
                            TextElement.FontSize="10pt"
                            TextElement.FontFamily="Arial"
                            TextElement.Foreground="Black"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            ContentSource="Header"
                            Margin="8,3,8,3"
                            Width="Auto"
                            Height="Auto"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="Peachpuff" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
